syntax = "proto3";

option java_multiple_files = true;
option java_package = "it.unibo.tuprolog.solve.lpaas.solveMessage";
option java_outer_classname = "SolveMessage";

package lpaas;

/* Request messages */

message SolveRequest {
  message Options {
    string name = 1;
    optional int64 value = 2;
  }

  optional string solverID = 1;
  string struct = 2;
  repeated Options options = 3;
}

message SolutionID {
  string solverID = 1;
  string computationID = 2;
  string query = 3;
  int32 index = 4;
}

/* Reply messages */

message SolutionSequence {
  string solverID = 1;
  string computationID = 2;
  string query = 3;
}

message SolutionReply {
  bool isYes = 4;
  bool isNo = 5;
  bool isHalt = 6;
  string query = 1;
  repeated SubstitutionMsg substitution = 3;
  bool hasNext = 8;

  message ErrorMsg {
    string message = 1;
    repeated string logicStackTrace = 2;
    int64 startTime = 3;
    int64 maxDuration = 4;
    string customDataStore = 5;
  }

  optional ErrorMsg error = 7;
}

message SubstitutionMsg {
  string var = 1;
  string term = 2;
}

//Elements of Solver

message SolverID {
  string solverID = 1;
}

message UnificatorMsg {
  repeated SubstitutionMsg substitution = 1;
}

message RuntimeMsg {
  message LibraryMsg {
    string name = 1;
  }

  repeated LibraryMsg libraries = 1;
}

message FlagsMsg {
  message FlagMsg {
    string name = 1;
    string value = 2;
  }

  repeated FlagMsg flags = 1;
}

message TheoryMsg {
  message ClauseMsg {
    string content = 1;
  }

  repeated ClauseMsg clause = 1;
}

message OperatorSetMsg {
  message OperatorMsg {
    string functor = 1;
    string specifier = 2;
    int32 priority = 3;
  }

  repeated OperatorMsg operator = 1;
}

message Channels {
  message ChannelID {
    string name = 1;
    optional string content = 2;
  }

  repeated ChannelID channel = 1;
}

message LineEvent {
  string solverID = 1;
  Channels.ChannelID channelID = 2;
  string line = 3;
}

message OutputChannelEvent {
  string solverID = 1;
  Channels.ChannelID channelID = 2;
}

message OperationResult {
  bool result = 1;
  optional string error = 2;
}




